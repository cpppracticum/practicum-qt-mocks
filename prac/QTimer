#pragma once

#include <QTimer>
#include <QMainWindow>
#include <QObject>
#include <QWidget>

namespace prac {

#ifndef PRAC_TESTS

using QTimer = ::QTimer;

#else

class QTimer : public ::QObject{

    Q_OBJECT

    bool is_on_ = false;
    int state_ = 0;

    bool single_shot_ = false;
    int interval_ = 0;

public:
    QTimer() = default;
    QTimer(QMainWindow* w) {
        (void)w;
    }

    ~QTimer() override =default;
    bool isOn() const {
        return is_on_;
    }

    int getState() const {
        return state_;
    }

    int getInterval() const {
        return interval_;
    }

    void emitTimeout() {
        emit timeout();
    }


public slots:
    void start(int msec) {
        is_on_ = true;
        state_ = msec;
    }

    void start() {
        is_on_ = true;
    }

    void setInterval(int interval) {
        interval_ = interval;
    }

    void setSingleShot(bool single_shot) {
        single_shot_ = single_shot;
    }

    void stop() {
        is_on_ = false;
        state_ = 0;
    }

signals:
    void timeout();

};


#endif

}  // namespace prac
